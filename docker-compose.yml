version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: prompteval
      POSTGRES_USER: prompteval
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prompteval"]
      interval: 5s
      timeout: 5s
      retries: 5

  prompteval-lite:
    build: .
    ports:
      - "8000:8000"
    environment:
      # API Keys
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      
      # Application Settings
      - LOG_LEVEL=INFO
      - RATE_LIMIT_REQUESTS=10
      - RATE_LIMIT_WINDOW=60
      - MAX_SYNTHETIC_CASES=10
      - REQUEST_TIMEOUT=30
      
      # Database Configuration
      - ENABLE_DATABASE=${ENABLE_DATABASE:-true}
      - DATABASE_URL=postgresql+asyncpg://prompteval:${DB_PASSWORD:-changeme}@postgres:5432/prompteval
      
      # Authentication Settings
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
      - JWT_ALGORITHM=HS256
      - JWT_EXPIRATION_HOURS=24
      
      # Encryption Settings
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
      if [ '${ENABLE_DATABASE:-true}' = 'true' ]; then
        echo 'Waiting for database...' &&
        sleep 5 &&
        alembic upgrade head;
      fi &&
      python -m uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

volumes:
  postgres_data: